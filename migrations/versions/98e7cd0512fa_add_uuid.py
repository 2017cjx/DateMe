"""add uuid

Revision ID: 98e7cd0512fa
Revises: 65d169ec3004
Create Date: 2025-03-17 18:22:27.503938

"""
from alembic import op
import sqlalchemy as sa
import uuid


# revision identifiers, used by Alembic.
revision = '98e7cd0512fa'
down_revision = '65d169ec3004'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # ✅ まず uuid カラムを nullable=True で追加
    op.add_column('date_form', sa.Column('uuid', sa.String(36), unique=True, nullable=True))

    # ✅ 既存データに UUID を埋める
    connection = op.get_bind()
    result = connection.execute("SELECT id FROM date_form")
    for row in result:
        connection.execute(
            sa.text("UPDATE date_form SET uuid = :uuid WHERE id = :id"),
            {"uuid": str(uuid.uuid4()), "id": row[0]}
        )

    # ✅ その後 NOT NULL 制約を追加
    op.alter_column('date_form', 'uuid', nullable=False)


    with op.batch_alter_table('date_activity_options', schema=None) as batch_op:
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_foreign_key(None, 'date_form', ['form_id'], ['id'])

    with op.batch_alter_table('date_form', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uuid', sa.String(length=36), nullable=True))
        batch_op.create_unique_constraint(None, ['uuid'])

    with op.batch_alter_table('date_meal_options', schema=None) as batch_op:
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_foreign_key(None, 'date_form', ['form_id'], ['id'])

    with op.batch_alter_table('date_meeting_locations', schema=None) as batch_op:
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_foreign_key(None, 'date_form', ['form_id'], ['id'])

    with op.batch_alter_table('date_responses', schema=None) as batch_op:
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_foreign_key(None, 'date_form', ['form_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('date_responses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('date_meeting_locations', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('date_meal_options', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('date_form', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('uuid')

    with op.batch_alter_table('date_activity_options', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('form_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
